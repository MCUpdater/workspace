import org.apache.tools.ant.filters.*

subprojects {
    apply plugin: 'java'
    group = 'org.mcupdater'

    repositories {
        mavenCentral()
    }
}

def sharedVersion = new Version(major: 3, minor: 2, buildNum: 5)

class Version {
    int major, minor, buildNum

    String toString() {
        if (buildNum != 0) {
            "$major.$minor.$buildNum"
        } else {
            "$major.$minor"
        }
    }
}

project(':MCU-Yggdrasil') {
    version = '1.0'
    dependencies {
        compile 'com.google.code.gson:gson:2.2.4'
    }
}

project(':MCU-DownloadLib') {
    version = new Version(major: 1, minor: 3)
    sourceCompatibility = 1.6

    afterEvaluate {
        processResources {
            include '**/*.properties'
            filter(ReplaceTokens, tokens: [verMajor: Integer.toString(version.major), verMinor: Integer.toString(version.minor), verBuild: Integer.toString(version.buildNum)])
            println("Version " + version)
        }
    }

    dependencies {
        compile 'commons-codec:commons-codec:1.9'
        compile 'commons-io:commons-io:2.4'
        compile 'org.tukaani:xz:1.4'
    }
}

project(':MCU-API') {
    version = sharedVersion
    sourceCompatibility = 1.7

    afterEvaluate {
        processResources {
            from(sourceSets*.resources.srcDirs) {
                include '**/*.properties'
                filter(ReplaceTokens, tokens: [verMajor: Integer.toString(version.major), verMinor: Integer.toString(version.minor), verBuild: Integer.toString(version.buildNum)])
            }
            from(sourceSets*.resources.srcDirs) {
                exclude '**/*.properties'
            }
        }
    }

    dependencies {
        compile project(':MCU-DownloadLib')
        compile project(':MCU-Yggdrasil')
        compile 'commons-codec:commons-codec:1.9'
        compile 'commons-io:commons-io:2.4'
        compile 'com.google.code.gson:gson:2.2.4'
    }
}

project(':MCU-Bootstrap') {
    version = '1.2'
    sourceCompatibility = 1.6

    dependencies {
        compile project(':MCU-DownloadLib')
        compile 'net.sf.jopt-simple:jopt-simple:4.5'
        compile 'org.apache.commons:commons-lang3:3.2.1'
    }

    jar {
        archiveName = 'MCU-Bootstrap.jar'
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        manifest {
            attributes "Main-Class" : 'org.mcupdater.BootstrapForm'
        }
    }
}

project(':MCU-FXGUI') {
    version = sharedVersion
    sourceCompatibility = 1.7

    afterEvaluate {
        processResources {
            from(sourceSets*.resources.srcDirs) { include '**/*.properties' filter(ReplaceTokens, tokens: [verMajor: Integer.toString(version.major), verMinor: Integer.toString(version.minor), verBuild: Integer.toString(version.buildNum)]) }
            from(sourceSets*.resources.srcDirs) { exclude '**/*.properties' }
        }
    }
    dependencies {
        compile project(':MCU-API')
        compile project(':MCU-DownloadLib')
        compile project(':MCU-Yggdrasil')
        compile 'org.apache.commons:commons-lang3:3.2.1'
        compile 'net.sf.jopt-simple:jopt-simple:4.5'
        compile 'commons-io:commons-io:2.4'
        compile 'com.google.code.gson:gson:2.2.4'
        compile files("${System.properties['java.home']}/lib/jfxrt.jar")
    }

    jar {
        baseName = 'MCUpdater'
    }
}

project(':PackBuilder') {
    sourceCompatibility = 1.7
    dependencies {
        compile project(':MCU-API')
        compile 'net.sf.jopt-simple:jopt-simple:4.5'
        compile files("${System.properties['java.home']}/lib/jfxrt.jar")
    }
}

project(':FastPack') {
    version = '1.5'
    sourceCompatibility = 1.7

    dependencies {
        compile project(':MCU-API')
        compile project(':MCU-DownloadLib')
        compile 'net.sf.jopt-simple:jopt-simple:4.5'
        compile 'commons-codec:commons-codec:1.9'
        compile 'org.apache.commons:commons-lang3:3.2.1'
        compile 'com.google.code.gson:gson:2.2.4'
    }

    jar {
        baseName = 'MCU-FastPack'
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        manifest {
            attributes "Main-Class" : 'org.mcupdater.fastpack.FastPack'
        }
    }
}
